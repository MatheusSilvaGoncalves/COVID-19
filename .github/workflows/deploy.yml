# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).

name: Build and Deploy to GKE

on:
  push:
    branches:
      - git-actions

# Environment variables available to all jobs and steps in this workflow
env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY}}
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
  APP_NAME: hospital-queue-model
  BRANCH: develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Heroku
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.0.0 # This is the action
        with:
          heroku_api_key: HEROKU_API_KEY
          heroku_app_name: APP_NAME #Must be unique in Heroku
          heroku_email: HEROKU_EMAIL
          #buildpack: "SOME BUILDPACK" #OPTIONAL
          branch: BRANCH #OPTIONAL and DEFAULT - 'HEAD' (a.k.a your current branch)
          dontuseforce: false #OPTIONAL and DEFAULT - false
          usedocker: true #OPTIONAL and DEFAULT - false
